version: 2.1

orbs:
  slack: circleci/slack@5.1.1
executors:
  java-executor:
    docker:
      - image: maven:3.9.9-amazoncorretto-21  # Usa una imagen base con Java 21
    working_directory: ~/repo

jobs:
  build:
    executor: java-executor
    steps:
      - checkout  # Clona el c칩digo del repositorio
      - run:
          name: Compilar proyecto
          command: mvn package
      #- run:
      #    name: Ejecutar pruebas
      #    command: mvn sonar:sonar
      - persist_to_workspace:  # Guarda el JAR para los siguientes pasos
          root: .
          paths:
            - target/  # Carpeta donde Maven guarda el JAR generado

  build-and-push-docker:
    docker:
      - image: docker:latest  # Usa una imagen de Docker para construir y empujar im치genes
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker  # Habilita Docker dentro del contenedor
      - run:
          name: Iniciar sesi칩n en Docker Hub
          command: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - run:
          name: Crear archivo de versi칩n
          command: ls -l
      - run:
          name: Construir imagen Docker
          command: docker build -t $DOCKER_USERNAME/my-java-app:latest .
      - run:
          name: Subir imagen a Docker Hub
          command: docker push $DOCKER_USERNAME/my-java-app:latest

workflows:
  version: 2
  build-and-push:
    jobs:
      - build
      - build-and-push-docker:
          requires:
            - build
          filters:
            branches:
              only: main  # Solo sube a Docker Hub desde la rama main
      - slack/notify:
          requires:
            - build
          channel: "#virtualsoft"  # Reemplaza con tu canal
          event: always
